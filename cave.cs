//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//Class: cave
//Author: Spencer Healy
//This class will construct the game grid. It will be a 2-D array that is 4 x 4 in size.
//Some methods may accomplish the following:
//1)Consruct the game board, and randomly place pitts, a dragon, and an exit. 
//2)printing the game board when a specific key is pressed (print the array)
//3)When the player is close to an obsticle, print a hint. 
//4)Accept user input, move player based on criteria detailed in the method.

using System;
namespace DragonCave_SH
{
	public class cave
	{
		//member variables
		private string [,] caveArray;//declare array (this will be the game board)

		public cave ()
		{
			//initialize caveArray
			caveArray = new string[4,4];
		}

		//Add a player object, a few pits, 1 dragon, gold, and 1 exit to the caveArray
		//First, manually place items in, when that works as intended,
		//modify the logic to place these items in the caveArray randomly. 
		public void populateArray()
		{
			caveArray[0, 0] = "exit";
			caveArray[0, 1] = "empty";
			caveArray[0, 2] = "empty";
			caveArray[0, 3] = "pitt";

			caveArray[1, 0] = "gold";
			caveArray[1, 1] = "empty";
			caveArray[1, 2] = "pitt";
			caveArray[1, 3] = "empty";

			caveArray[2, 0] = "empty";
			caveArray[2, 1] = "empty";
			caveArray[2, 2] = "dragon";
			caveArray[2, 3] = "gold";

			caveArray[3, 0] = "gold";
			caveArray[3, 1] = "empty";
			caveArray[3, 2] = "pitt";
			caveArray[3, 3] = "empty";
		}

		//loop through the 2-D array and display its contents
		//(Call this method when player hits the cheat button)
		public void printArray()
		{
			Console.WriteLine("\nContents of the cave:");
			//loop through the 2D array
			for (int y = 0; y < 4; y = y + 1) 
			{
				for(int x = 0; x < 4; x = x + 1)
				{
					Console.Write (caveArray[y,x] + "\t");
				}
				Console.WriteLine();
			}
		}

		//Directs the program depending on the user's input
		public string acceptUserInput(string input)
		{
			switch (input) {
			case "x":
				this.printArray ();
				break;
			case "s":
				Console.WriteLine ("You shot 1 arrow");
				break;
			case "g":
				Console.WriteLine ("grabbed the gold");
				break;
			case "c":
				Console.WriteLine ("You climbed out");
				break;
			case "f":
				Console.WriteLine ("You moved forward");
				break;
			case "l":
				Console.WriteLine ("You turned left");
				break;
			case "r":
				Console.WriteLine ("You turned right");
				break;
			case "q":
				Console.WriteLine ("Quitter!" +
					"");
				break;
			
			default:
				Console.WriteLine ("Invalid input in acceptUserInput()");
				break;
			}


			return input;
		}
		
	}
}

